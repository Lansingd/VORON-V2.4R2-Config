#Voron StealthBurner工具头设置状态LED的宏定义（或任何neopixel类型的LED）。
#您需要配置一个neopixel（或其他可寻址LED，如dotstar）。
#请参见 https://www.klipper3d.org/Config_Reference.html#neopixel 获取配置详细信息。


#####################################
#               说明                #
#####################################
# 如何使用这些内容：
#
#     1.  将此 .cfg 文件复制到 Klipper 配置目录中，然后在你的 printer.cfg 文件顶部添加 [include stealthburner_leds.cfg]，
#         以便向 Klipper 注册 LED和宏。
#         
#     2.  通过编辑 [neopixel sb_leds] 来定义您的 LED，并输入来自控制板的数据引脚以及颜色顺序。注意：RGB 和 RGBW 是不同的，必须显式定义。RGB 和 RGBW
#         也无法在同一链中混合使用。需要单独的数据线才能正常运行。
#          RGBW LED 将具有可见的黄色荧光物质部分。如果您的 LED 没有这个黄色部分，则是 RGB LED。
#
#     3.  保存您的配置并重新启动 Klipper。
#         注意：我们将 RED 和 BLUE 设置为 1.0，以便用户和支持者更容易检测错误配置或错接线。
#         默认颜色格式适用于具有专用白色 LED 的 Neopixels。启动时，所有三个 SB LED 应该亮起。
#         如果您的 LED 上出现随机颜色，请将 color_order 更改为 GRB 并重新启动。然后在下一段中省略每个建议的 color_order 的 W。
#         如果您得到洋红色，请检查您的颜色顺序是否正确。如果您得到 CYAN，请使用 RGBW。如果您得到 YELLOW，请使用 BRGW（注意，BRG 仅在最新的 Klipper 版本中受支持。）
#                 
#
#     4.  确认LED灯正确设置后，现在必须决定要在哪里调用这些宏命令...也就是将它们添加到您现有的gcode宏中。
#         除非您将STATUS_?????宏添加到现有的gcode宏中，否则什么都不会发生。 
#
#         例如：在您的QGL gcode宏开头添加STATUS_LEVELING，然后在其末尾添加STATUS_READY以将标志LED和喷嘴LED设置回“就绪”状态。
#         例如：在喷嘴清洁宏的开头添加STATUS_CLEANING，然后在其末尾添加STATUS_READY以将LED恢复到“就绪”状态。
#
#     5.  如果需要，可以随意更改每个宏的颜色或创建新的宏。下面提供的宏只是一个可能的示例。
#         如果您想尝试一些更复杂的动画，最好使用WLED和Moonraker以及一个小型微控制器
#
#####################################
#       END INSTRUCTRUCTIONS        #
#####################################
#[neopixel sb_leds]
#pin: EBBCan:PD3
#   连接到Neopixel的引脚。必须提供此参数。
#chain_count: 3
#   连接到提供引脚的Neopixel芯片的数量。默认值为1（表示只连接一个Neopixel到该引脚）。
#color_order: GRBW
#   设置LED硬件所需的像素顺序。选项有GRB、RGB、GRBW或RGBW。默认为GRB。
#initial_RED: 1.0
#initial_GREEN: 0.0
#initial_BLUE: 1.0
#initial_WHITE: 0.0
#   设置Neopixel的初始LED颜色。每个值应介于0.0和1.0之间。WHITE选项仅适用于RGBW LED。每种颜色的默认值都为0.#

#   大多数宏的配置可以通过修改此文件开头的_sb_vars宏中的变量来完成。

##########
# MACROS #
##########

# 可用以下状态宏（这些宏放在您的宏中）：
#
#    STATUS_READY
#    STATUS_OFF
#    STATUS_BUSY
#    STATUS_HEATING
#    STATUS_LEVELING
#    STATUS_HOMING
#    STATUS_CLEANING
#    STATUS_MESHING
#    STATUS_CALIBRATING_Z
#
# 使用额外的基本控制宏来控制：
#
#    SET_NOZZLE_LEDS_ON
#    SET_LOGO_LEDS_OFF
#    SET_NOZZLE_LEDS_OFF
#
# 由 Voron discord 用户 wile.e、Tetsunosuke 和 etherwalker 提供



[gcode_macro _sb_vars]
# 用户设置 StealthBurner 状态 LED 的变量。您可以在此更改标志和喷嘴的状态颜色和 LED 配置。
variable_colors: {
        'logo': { # 标志部分的颜色
            'busy': {'r': 1.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},
            'cleaning': {'r': 0.0, 'g': 0.02, 'b': 0.5, 'w': 0.0},
            'calibrating_z': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},
            'heating': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},
            'homing': {'r': 0.0, 'g': 0.6, 'b': 0.2, 'w': 0.0},
            'leveling': {'r': 0.5, 'g': 0.1, 'b': 0.4, 'w': 0.0},
            'meshing': {'r': 0.2, 'g': 1.0, 'b': 0.0, 'w': 0.0},
            'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},
            'printing': {'r': 1.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},
            'standby': {'r': 0.01, 'g': 0.01, 'b': 0.01, 'w': 0.1},
        },
        'nozzle': { # 喷嘴部分的颜色
            'busy': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 1.0},
            'heating': {'r': 0.8, 'g': 0.35, 'b': 0.0, 'w':0.0},
            'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},
            'on': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':1.0},
            'standby': {'r': 0.6, 'g': 0.0, 'b': 0.0, 'w':0.0},
        },
        'thermal': {
            'hot': {'r': 1.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},
            'cold': {'r': 0.3, 'g': 0.0, 'b': 0.3, 'w': 0.0}
        }
    }
variable_logo_led_name:         "sb_leds" 
# 包含徽标 LED 的可寻址 LED 链的名称
variable_logo_idx:              "1" 
# 徽标中 LED 的索引的逗号分隔列表
variable_nozzle_led_name:       "sb_leds"
# 包含喷嘴 LED 的可寻址 LED 链的名称。这通常与徽标相同。
variable_nozzle_idx:            "2,3"
# 喷嘴中 LED 的索引的逗号分隔列表
gcode:
    # 此部分是必需的。请勿删除。


[gcode_macro _set_sb_leds]
gcode:
    {% set red = params.RED|default(0)|float %}
    {% set green = params.GREEN|default(0)|float %}
    {% set blue = params.BLUE|default(0)|float %}
    {% set white = params.WHITE|default(0)|float %}
    {% set led = params.LED|string %}
    {% set idx = (params.IDX|string).split(',') %}
    {% set transmit_last = params.TRANSMIT|default(1) %}

    {% for led_index in idx %}
        {% set transmit=transmit_last if loop.last else 0 %}
        set_led led={led} red={red} green={green} blue={blue} white={white} index={led_index} transmit={transmit}
    {% endfor %}

[gcode_macro _set_sb_leds_by_name]
gcode:
    {% set leds_name = params.LEDS %}
    {% set color_name = params.COLOR %}
    {% set color = printer["gcode_macro _sb_vars"].colors[leds_name][color_name] %}
    {% set led = printer["gcode_macro _sb_vars"][leds_name + "_led_name"] %}
    {% set idx = printer["gcode_macro _sb_vars"][leds_name + "_idx"] %}
    {% set transmit = params.TRANSMIT|default(1) %}

    _set_sb_leds led={led} red={color.r} green={color.g} blue={color.b} white={color.w} idx="{idx}" transmit={transmit}

[gcode_macro _set_logo_leds]
gcode:
    {% set red = params.RED|default(0)|float %}
    {% set green = params.GREEN|default(0)|float %}
    {% set blue = params.BLUE|default(0)|float %}
    {% set white = params.WHITE|default(0)|float %}
    {% set led = printer["gcode_macro _sb_vars"].logo_led_name %}
    {% set idx = printer["gcode_macro _sb_vars"].logo_idx %}
    {% set transmit=params.TRANSMIT|default(1) %}

    _set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}

[gcode_macro _set_nozzle_leds]
gcode:
    {% set red = params.RED|default(0)|float %}
    {% set green = params.GREEN|default(0)|float %}
    {% set blue = params.BLUE|default(0)|float %}
    {% set white = params.WHITE|default(0)|float %}
    {% set led = printer["gcode_macro _sb_vars"].nozzle_led_name %}
    {% set idx = printer["gcode_macro _sb_vars"].nozzle_idx %}
    {% set transmit=params.TRANSMIT|default(1) %}

    _set_sb_leds led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}

[gcode_macro set_logo_leds_off]
gcode:
    {% set transmit=params.TRANSMIT|default(1) %}
    _set_logo_leds red=0 blue=0 green=0 white=0 transmit={transmit}

[gcode_macro set_nozzle_leds_on]
gcode:
    {% set transmit=params.TRANSMIT|default(1) %}
    _set_sb_leds_by_name leds="nozzle" color="on" transmit={transmit}

[gcode_macro set_nozzle_leds_off]
gcode:
    {% set transmit=params.TRANSMIT|default(1) %}
    _set_sb_leds_by_name leds="nozzle" color="off" transmit={transmit}

[gcode_macro status_off]
gcode:
    set_logo_leds_off transmit=0
    set_nozzle_leds_off

[gcode_macro status_ready]
gcode:
    _set_sb_leds_by_name leds="logo" color="standby" transmit=0
    _set_sb_leds_by_name leds="nozzle" color="standby" transmit=1

[gcode_macro status_busy]
gcode:
    _set_sb_leds_by_name leds="logo" color="busy" transmit=0
    set_nozzle_leds_on

[gcode_macro status_heating]
gcode:
    _set_sb_leds_by_name leds="logo" color="heating" transmit=0
    _set_sb_leds_by_name leds="nozzle" color="heating" transmit=1

[gcode_macro status_leveling]
gcode:
    _set_sb_leds_by_name leds="logo" color="leveling" transmit=0
    set_nozzle_leds_on

[gcode_macro status_homing]
gcode:
    _set_sb_leds_by_name leds="logo" color="homing" transmit=0
    set_nozzle_leds_on

[gcode_macro status_cleaning]
gcode:
    _set_sb_leds_by_name leds="logo" color="cleaning" transmit=0
    set_nozzle_leds_on

[gcode_macro status_meshing]
gcode:
    _set_sb_leds_by_name leds="logo" color="meshing" transmit=0
    set_nozzle_leds_on

[gcode_macro status_calibrating_z]
gcode:
    _set_sb_leds_by_name leds="logo" color="calibrating_z" transmit=0
    set_nozzle_leds_on

[gcode_macro status_printing]
gcode:
    _set_sb_leds_by_name leds="logo" color="printing" transmit=0
    set_nozzle_leds_on
